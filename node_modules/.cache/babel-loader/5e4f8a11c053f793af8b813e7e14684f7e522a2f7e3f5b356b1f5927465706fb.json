{"ast":null,"code":"const SPADES = 'S';\nconst HEARTS = 'H';\nconst CLUBS = 'C';\nconst DIAMONDS = 'D';\nclass Card {\n  constructor(v = null, s = null, f = null) {\n    this.m_value = v;\n    this.m_suit = s;\n    this.m_faceup = f;\n  }\n  toString() {\n    var value = this.m_value.toString();\n    if (this.m_value == 11) {\n      value = 'J';\n    } else if (this.m_value == 12) {\n      value = 'Q';\n    } else if (this.m_value == 13) {\n      value = 'K';\n    } else if (this.m_value == 1) {\n      value = 'A';\n    }\n    return value + this.m_suit.toString();\n  }\n  assign(card) {\n    if (card instanceof Card) {\n      this.m_value = card.m_value;\n      this.m_suit = card.m_suit;\n      this.m_faceup = card.m_faceup;\n    }\n  }\n}\nfunction getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\nexport { SPADES, HEARTS, CLUBS, DIAMONDS, Card, getRndInteger };","map":{"version":3,"names":["SPADES","HEARTS","CLUBS","DIAMONDS","Card","constructor","v","s","f","m_value","m_suit","m_faceup","toString","value","assign","card","getRndInteger","min","max","Math","floor","random"],"sources":["C:/Users/valer/OneDrive/Desktop/cardgame/src/globals.js"],"sourcesContent":["\r\nconst SPADES = 'S';\r\nconst HEARTS = 'H';\r\nconst CLUBS = 'C';\r\nconst DIAMONDS = 'D';\r\n\r\nclass Card {\r\n\tm_value;\r\n\tm_suit;\r\n\tm_faceup;\r\n\r\n\tconstructor(v = null, s = null, f = null) {\r\n\t\tthis.m_value = v;\r\n\t\tthis.m_suit = s;\r\n\t\tthis.m_faceup = f;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\tvar value = this.m_value.toString();\r\n\t\tif (this.m_value == 11) { value = 'J'; }\r\n\t\telse if (this.m_value == 12) { value = 'Q'; }\r\n\t\telse if (this.m_value == 13) { value = 'K'; }\r\n\t\telse if (this.m_value == 1) { value = 'A'; }\r\n\t\treturn value + this.m_suit.toString();\r\n\t}\r\n\r\n\tassign(card) {\r\n\t\tif (card instanceof Card) {\r\n\t\t\tthis.m_value = card.m_value;\r\n\t\t\tthis.m_suit = card.m_suit;\r\n\t\t\tthis.m_faceup = card.m_faceup;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getRndInteger(min, max) {\r\n\treturn Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport { SPADES, HEARTS, CLUBS, DIAMONDS, Card, getRndInteger }\r\n\r\n\r\n"],"mappings":"AACA,MAAMA,MAAM,GAAG,GAAG;AAClB,MAAMC,MAAM,GAAG,GAAG;AAClB,MAAMC,KAAK,GAAG,GAAG;AACjB,MAAMC,QAAQ,GAAG,GAAG;AAEpB,MAAMC,IAAI,CAAC;EAKVC,WAAWA,CAACC,CAAC,GAAG,IAAI,EAAEC,CAAC,GAAG,IAAI,EAAEC,CAAC,GAAG,IAAI,EAAE;IACzC,IAAI,CAACC,OAAO,GAAGH,CAAC;IAChB,IAAI,CAACI,MAAM,GAAGH,CAAC;IACf,IAAI,CAACI,QAAQ,GAAGH,CAAC;EAClB;EAEAI,QAAQA,CAAA,EAAG;IACV,IAAIC,KAAK,GAAG,IAAI,CAACJ,OAAO,CAACG,QAAQ,CAAC,CAAC;IACnC,IAAI,IAAI,CAACH,OAAO,IAAI,EAAE,EAAE;MAAEI,KAAK,GAAG,GAAG;IAAE,CAAC,MACnC,IAAI,IAAI,CAACJ,OAAO,IAAI,EAAE,EAAE;MAAEI,KAAK,GAAG,GAAG;IAAE,CAAC,MACxC,IAAI,IAAI,CAACJ,OAAO,IAAI,EAAE,EAAE;MAAEI,KAAK,GAAG,GAAG;IAAE,CAAC,MACxC,IAAI,IAAI,CAACJ,OAAO,IAAI,CAAC,EAAE;MAAEI,KAAK,GAAG,GAAG;IAAE;IAC3C,OAAOA,KAAK,GAAG,IAAI,CAACH,MAAM,CAACE,QAAQ,CAAC,CAAC;EACtC;EAEAE,MAAMA,CAACC,IAAI,EAAE;IACZ,IAAIA,IAAI,YAAYX,IAAI,EAAE;MACzB,IAAI,CAACK,OAAO,GAAGM,IAAI,CAACN,OAAO;MAC3B,IAAI,CAACC,MAAM,GAAGK,IAAI,CAACL,MAAM;MACzB,IAAI,CAACC,QAAQ,GAAGI,IAAI,CAACJ,QAAQ;IAC9B;EACD;AACD;AAEA,SAASK,aAAaA,CAACC,GAAG,EAAEC,GAAG,EAAE;EAChC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAGD,GAAG,CAAC,CAAC,GAAGA,GAAG;AACrD;AAEA,SAASjB,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAEY,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}